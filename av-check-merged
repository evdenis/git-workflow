#!/usr/bin/env perl

use warnings;
use strict;

use feature qw/say/;

use Git::Repository;
use List::Util qw/any/;


sub query_branch
{
   my ($repo, $match) = @_;
   
   sort version_sort
      map {s/^\*?\h++|\h++$//rg}
         $repo->run('branch' => '--list' => $match)
}

sub parse_branch_version
{
   my $version = substr($_[0], index($_[0], '-') + 1);
   my $point = index($version, '.');
   if ($point == -1) {
      return [0, 0]
   }
   my $major   = substr($version, 0, $point);
   my $minor   = substr($version, $point + 1);
   $major = 0 unless $major;
   $minor = 0 unless $minor;

   [$major, $minor]
}

sub parse_branches_versions
{
   map { parse_branch_version $_ } @_
}

sub version_sort
{
   my @v = parse_branches_versions($a, $b);

   $v[0][0] <=> $v[1][0]
             ||
   $v[0][1] <=> $v[1][1]
}

my $r = Git::Repository->new(work_tree => $ENV{CURRENT_PROJECT});


foreach my $branch ('devel', 'spec') {
   my $last = (query_branch($r, $branch . '-*'))[-1];
   my @unmerged = map {s/^\*?\h++|\h++$//rg} $r->run(branch => '--no-merged' => $branch);

   if (any {$last eq $_} @unmerged) {
      print "$last is not completely merged to $branch\n"
   }
}

